Problem - Longest Substring Without Duplicate Characters
problem link - https://neetcode.io/problems/longest-substring-without-duplicates
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        if(s==""){
            return 0;
        }
        int count = 0;
        int n = s.length();
        string temp = "";
        temp+=s[0];
        set<char>st;
        st.insert(s[0]);
        for(int i=1;i<n;i++){
            auto it = st.find(s[i]);
            if(it==st.end()){
                temp+=s[i];
                st.insert(s[i]);
            }
            else{
                int tempmax = temp.length();
                if(count<tempmax){
                    count = tempmax;
                } 
                set<char>::iterator itstart, itend;
                itstart = st.begin();
                itend = st.end(); 
                st.erase(itstart,itend);
                string newtemp = "";
                for(int j = tempmax-1;j>=0;j--){
                    if(temp[j]==s[i]){
                        break;
                    }
                    else{
                        newtemp+=temp[j];
                        st.insert(temp[j]);
                    }
                }
                st.insert(s[i]);
                reverse(newtemp.begin(),newtemp.end());
                temp = newtemp;
                temp+=s[i];
            }
        }
        if(temp.length()>count){
            count = temp.length();
        }
        return count;
    }
};


Problem - Permutation in string
problem link - https://neetcode.io/problems/permutation-string
class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int l1 = s1.length();
        int l2 = s2.length();
        if(l1>l2){
            return false;
        }
        sort(s1.begin(),s1.end());
        int start = 0;
        int end = l1 -1;
        string temp = "";
        while(end<l2){
            for(int i=start;i<=end;i++){
                temp+=s2[i];
            }
            sort(temp.begin(),temp.end());
            if(s1==temp){
                return true;
            }
            else{
                start++;
                end++;
                temp = "";
            }
        }
        return false;
    }
};
